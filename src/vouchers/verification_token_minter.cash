pragma cashscript ^0.8.0;


contract VerificationTokenMinter (bytes32 verificationTokenCategory) {

    function mintVerificationMintingNft () {
        // >= 3 outputs: minting NFT (baton), UTXO for minting/fee
        // >= 3 outputs: minting NFT (baton), minted verification minting NFT, and fee funder change
        require(tx.inputs.length >= 2);
        require(tx.outputs.length >= 3);

        // minting NFT baton should be the first input and output
        bytes mintingNftInputCategory = tx.inputs[0].tokenCategory;
        bytes mintingNftOutputCategory = tx.outputs[0].tokenCategory;
        require(verificationTokenCategory + 0x02 == mintingNftInputCategory);
        require(verificationTokenCategory + 0x02 == mintingNftOutputCategory);

        // minting NFT baton should be sent back to contract
        require(tx.inputs[0].lockingBytecode == tx.outputs[0].lockingBytecode);

        // verification minting NFT should be the second output of same category and has dust value
        bytes verificationMintingNftOutputCategory = tx.outputs[1].tokenCategory;
        require(verificationTokenCategory + 0x02 == verificationMintingNftOutputCategory);
        require(tx.outputs[1].value == 1000);
    }

}